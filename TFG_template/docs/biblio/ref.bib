@mastersthesis{oaraque,
author = "Araque, Oscar",
abstract = "This thesis collects the result of a project whose objective is to design and develop a event driven automation rule web editor. The editor allows us to create and edit these automation rules not using complex syntax, but a simple graphical interface. This tool is able to create a great number of different rules as of several pre-defined channels that provide resources for these rules.",
address = "ETSI Telecomunicaci{\'o}n",
keywords = "rule automation, ewe, semantics",
month = "July",
school = "Universidad Polit{\'e}cnica de Madrid",
title = "{D}esign and {I}mplementation of an {E}vent  {R}ules {W}eb {E}ditor",
type = "Trabajo Fin de Grado",
year = "2014",
}
@mastersthesis{jfernando,
author = "S{\'a}nchez-Rada, J. Fernando",
abstract = "This project aims to introduce an event-based architecture for intelligent agents, inaccordance with the new tendencies in the Evented Web.The reason for this change is that agent communication is no longer suitable for theinmense amount of data generated nowadays and its nature. At least, not for their usein evolving scenarios where data sources interact without previous conguration. This isexactly what the precursors of the Live Web envision, and it is beginning to show in the newgeneration of evented applications, which enable customized interactions and a high level ofcommunication between dierent services.The proposed architecture shown in this document, called Maia, is based on a centralpiece or event router, which controls the ow of information/events to and from the connectedentities. These entities can be either event-aware agents or simply data sources andsubscribers. Thus giving a higher exibility than current technologies and easing the developmentof advanced systems by not requiring the complexity associated with agent systemsin all of the nodes.To demonstrate the feasibility and capabilities of the Maia architecture, a prototype hasbeen implemented which is also explained in detail in this document. It is based on the eventdrivenI/O server side JavaScript environment Node.js for the event routing components,and adapted Jason BDI agent platform as an example of a subscribed multi-agent system.Using this prototype, the benets of using Maia are illustrated by developing a personalagent capable of booking train tickets and that combines access to services, linked data andcommon sense reasoning.",
keywords = "agents, web hooks",
school = "ETSIT-UPM",
title = "{D}esign and {I}mplementation of an {A}gent {A}rchitecture {B}ased on {W}eb {H}ooks",
year = "2012",
}